<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<link rel="stylesheet" type="text/css" href="highlight.css">
</head>
<body class="hl">
<pre class="hl"><span class="hl kwa">using</span> DevExpress<span class="hl opt">.</span>Data<span class="hl opt">.</span>Filtering<span class="hl opt">;</span>
<span class="hl kwa">using</span> DevExpress<span class="hl opt">.</span>Mobile<span class="hl opt">.</span>DataGrid<span class="hl opt">;</span>
<span class="hl kwa">using</span> System<span class="hl opt">;</span>
<span class="hl kwa">using</span> System<span class="hl opt">.</span>Collections<span class="hl opt">.</span>Generic<span class="hl opt">;</span>
<span class="hl kwa">using</span> System<span class="hl opt">.</span>Diagnostics<span class="hl opt">;</span>
<span class="hl kwa">using</span> System<span class="hl opt">.</span>Threading<span class="hl opt">.</span>Tasks<span class="hl opt">;</span>
<span class="hl kwa">using</span> Xamarin<span class="hl opt">.</span>Forms<span class="hl opt">;</span>
<span class="hl kwa">using</span> DevExpress<span class="hl opt">.</span>Mobile<span class="hl opt">.</span>DataGrid<span class="hl opt">.</span>Theme<span class="hl opt">;</span>

<span class="hl kwa">namespace</span> DevExpress<span class="hl opt">.</span>GridDemo <span class="hl opt">{</span>
    <span class="hl kwa">public partial class</span> TestPage <span class="hl opt">:</span> ContentPage <span class="hl opt">{</span>
        <span class="hl kwa">class</span> CustomerNameComparer <span class="hl opt">:</span> IComparer<span class="hl opt">&lt;</span>IRowData<span class="hl opt">&gt; {</span>
            <span class="hl ppc">#region IComparer implementation</span>
            <span class="hl kwa">public</span> <span class="hl kwb">int</span> <span class="hl kwd">Compare</span><span class="hl opt">(</span>IRowData x<span class="hl opt">,</span> IRowData y<span class="hl opt">) {</span>
                <span class="hl kwa">return</span> Comparer<span class="hl opt">&lt;</span><span class="hl kwb">string</span><span class="hl opt">&gt;.</span>Default<span class="hl opt">.</span><span class="hl kwd">Compare</span><span class="hl opt">((</span><span class="hl kwb">string</span><span class="hl opt">)</span>x<span class="hl opt">.</span><span class="hl kwd">GetFieldValue</span><span class="hl opt">(</span><span class="hl str">&quot;Customer.Name&quot;</span><span class="hl opt">), (</span><span class="hl kwb">string</span><span class="hl opt">)</span>y<span class="hl opt">.</span><span class="hl kwd">GetFieldValue</span><span class="hl opt">(</span><span class="hl str">&quot;Customer.Name&quot;</span><span class="hl opt">));</span>
            <span class="hl opt">}</span>
            <span class="hl ppc">#endregion</span>
        <span class="hl opt">}</span>

        <span class="hl kwa">public</span> <span class="hl kwd">TestPage</span><span class="hl opt">() {</span>
            <span class="hl kwd">InitializeComponent</span><span class="hl opt">();</span>
            <span class="hl slc">//List&lt;OrderSeverity&gt; severityList = new List&lt;OrderSeverity&gt;();</span>
            <span class="hl slc">//severityList.Add(new OrderSeverity() { Severity = Severity.Severe, DisplayText = &quot;SEVERE !&quot; });</span>
            <span class="hl slc">//severityList.Add(new OrderSeverity() { Severity = Severity.Moderate, DisplayText = &quot;Moderate&quot; });</span>
            <span class="hl slc">//severityList.Add(new OrderSeverity() { Severity = Severity.Minor, DisplayText = &quot;minor&quot; });</span>
            <span class="hl slc">//colSeverity.ItemsSource = severityList;</span>
            <span class="hl slc">//colSeverity.DisplayMember = &quot;DisplayText&quot;;</span>
            <span class="hl slc">//colSeverity.ValueMember = &quot;Severity&quot;;</span>
            <span class="hl kwd">BindData</span><span class="hl opt">();</span>

      grid<span class="hl opt">.</span>SwipeButtonShowing <span class="hl opt">+=</span> Showing<span class="hl opt">;</span>
      grid<span class="hl opt">.</span>SwipeButtonClick <span class="hl opt">+=</span> Click<span class="hl opt">;</span>
      <span class="hl slc">//grid.Theme = new DevExpress.Mobile.DataGrid.Theme.DarkTheme();</span>
            <span class="hl kwd">SetAppearanceForControlPanel</span><span class="hl opt">();</span>
      <span class="hl slc">//</span>

      <span class="hl slc">//grid.Scroller.SetBinding&lt;MainPageViewModel&gt;(GridControl.IsRefreshingProperty, v =&gt; v.IsBusy);</span>
            <span class="hl slc">//grid.Filter.ColumnFilters.Add(new GridAutoFilter() { FilterExpression = CriteriaOperator.Parse(&quot;[Customer.Name] LIKE 'A%'&quot;) });</span>
            
            <span class="hl com">/*</span>
<span class="hl com">            grid.dataController.Comparer = new CustomerNameComparer();</span>
<span class="hl com">            grid.dataController.GetRow(0);</span>
<span class="hl com">            grid.dataController.Comparer = null;</span>
<span class="hl com">            grid.dataController.GetRow(0);</span>
<span class="hl com">            grid.dataController.Comparer = new CustomerNameComparer();</span>
<span class="hl com">            grid.dataController.GetRow(0);</span>
<span class="hl com">            */</span>
            <span class="hl slc">//grid.BackgroundColor = Color.Gray;</span>
        <span class="hl opt">}</span>

    <span class="hl kwb">void</span> <span class="hl kwd">Showing</span><span class="hl opt">(</span><span class="hl kwb">object</span> sender<span class="hl opt">,</span> SwipeButtonShowingEventArgs e<span class="hl opt">) {</span>
      <span class="hl kwa">if</span><span class="hl opt">(</span>e<span class="hl opt">.</span>RowHandle <span class="hl opt">==</span> <span class="hl num">1</span><span class="hl opt">) {</span>
        <span class="hl kwa">if</span><span class="hl opt">(</span>e<span class="hl opt">.</span>ButtonInfo<span class="hl opt">.</span>ButtonName <span class="hl opt">==</span> <span class="hl str">&quot;Test1&quot;</span><span class="hl opt">) {</span>
          e<span class="hl opt">.</span>IsVisible <span class="hl opt">=</span> <span class="hl kwa">false</span><span class="hl opt">;</span>
        <span class="hl opt">}</span>
      <span class="hl opt">}</span>
    <span class="hl opt">}</span>

    <span class="hl kwb">void</span> <span class="hl kwd">Click</span><span class="hl opt">(</span><span class="hl kwb">object</span> sender<span class="hl opt">,</span> SwipeButtonEventArgs e<span class="hl opt">) {</span>

    <span class="hl opt">}</span>

        <span class="hl kwb">void</span> <span class="hl kwd">gridCustomizeCell</span><span class="hl opt">(</span>CustomizeCellEventArgs e<span class="hl opt">) {</span>
            <span class="hl kwa">if</span> <span class="hl opt">(</span>e<span class="hl opt">.</span>FieldName <span class="hl opt">==</span> <span class="hl str">&quot;Total&quot;</span> <span class="hl opt">&amp;&amp; !</span>e<span class="hl opt">.</span>IsSelected<span class="hl opt">) {</span>
                <span class="hl kwb">string</span> name <span class="hl opt">= (</span><span class="hl kwb">string</span><span class="hl opt">)</span>grid<span class="hl opt">.</span><span class="hl kwd">GetCellValue</span><span class="hl opt">(</span>e<span class="hl opt">.</span>RowHandle<span class="hl opt">,</span> <span class="hl str">&quot;Customer.Name&quot;</span><span class="hl opt">);</span>
                <span class="hl kwa">if</span> <span class="hl opt">(!</span>String<span class="hl opt">.</span><span class="hl kwd">IsNullOrEmpty</span><span class="hl opt">(</span>name<span class="hl opt">) &amp;&amp;</span> name<span class="hl opt">.</span><span class="hl kwd">StartsWith</span><span class="hl opt">(</span><span class="hl str">&quot;ann&quot;</span><span class="hl opt">,</span> StringComparison<span class="hl opt">.</span>CurrentCultureIgnoreCase<span class="hl opt">)) {</span>
                    <span class="hl kwb">decimal</span> total <span class="hl opt">=</span> Convert<span class="hl opt">.</span><span class="hl kwd">ToDecimal</span><span class="hl opt">(</span>e<span class="hl opt">.</span>Value<span class="hl opt">);</span>
                    <span class="hl kwa">if</span> <span class="hl opt">(</span>total <span class="hl opt">&lt;</span> <span class="hl num">100</span><span class="hl opt">)</span>
                        e<span class="hl opt">.</span>BackgroundColor <span class="hl opt">=</span> Color<span class="hl opt">.</span>Red<span class="hl opt">;</span>
                    <span class="hl kwa">else if</span> <span class="hl opt">(</span>total <span class="hl opt">&gt;</span> <span class="hl num">1000</span><span class="hl opt">)</span>
                        e<span class="hl opt">.</span>BackgroundColor <span class="hl opt">=</span> Color<span class="hl opt">.</span>Green<span class="hl opt">;</span>
                    e<span class="hl opt">.</span>Handled <span class="hl opt">=</span> <span class="hl kwa">true</span><span class="hl opt">;</span>
                <span class="hl opt">}</span>
            <span class="hl opt">}</span>
        <span class="hl opt">}</span>
        <span class="hl kwb">void</span> <span class="hl kwd">gridOnCustomUnboundColumnData</span><span class="hl opt">(</span><span class="hl kwb">object</span> sender<span class="hl opt">,</span> GridColumnDataEventArgs e<span class="hl opt">) {</span>
            <span class="hl kwa">if</span> <span class="hl opt">(</span>e<span class="hl opt">.</span>Column<span class="hl opt">.</span>FieldName <span class="hl opt">==</span> <span class="hl str">&quot;Number3&quot;</span><span class="hl opt">) {</span>
                <span class="hl kwa">if</span> <span class="hl opt">(</span>e<span class="hl opt">.</span>IsGetData<span class="hl opt">)</span>
                    e<span class="hl opt">.</span>Value <span class="hl opt">= (</span><span class="hl kwb">int</span><span class="hl opt">)</span>e<span class="hl opt">.</span>RowData<span class="hl opt">.</span><span class="hl kwd">GetFieldValue</span><span class="hl opt">(</span><span class="hl str">&quot;Id&quot;</span><span class="hl opt">) *</span> <span class="hl num">3</span><span class="hl opt">;</span>
                <span class="hl kwa">else if</span> <span class="hl opt">(</span>e<span class="hl opt">.</span>IsSetData<span class="hl opt">)</span>
                    e<span class="hl opt">.</span>EditableRowData<span class="hl opt">.</span><span class="hl kwd">SetFieldValue</span><span class="hl opt">(</span><span class="hl str">&quot;Id&quot;</span><span class="hl opt">, -</span><span class="hl num">371</span><span class="hl opt">);</span>
            <span class="hl opt">}</span>
        <span class="hl opt">}</span>
        <span class="hl kwa">async</span> <span class="hl kwb">void</span> <span class="hl kwd">BindData</span><span class="hl opt">() {</span>
            BindingContext <span class="hl opt">=</span> <span class="hl kwa">await</span> <span class="hl kwd">LoadData</span><span class="hl opt">();</span>
        <span class="hl opt">}</span>
        Task<span class="hl opt">&lt;</span>MainPageViewModel<span class="hl opt">&gt;</span> <span class="hl kwd">LoadData</span><span class="hl opt">() {</span>
      <span class="hl kwa">return</span> Task<span class="hl opt">&lt;</span>MainPageViewModel<span class="hl opt">&gt;.</span><span class="hl kwd">Run</span><span class="hl opt">(() =&gt;</span> <span class="hl kwa">new</span> <span class="hl kwd">MainPageViewModel</span><span class="hl opt">(</span><span class="hl kwa">new</span> <span class="hl kwd">DemoOrdersRepository</span><span class="hl opt">()));</span>
        <span class="hl opt">}</span>
        <span class="hl kwb">void</span> <span class="hl kwd">OnGroupClicked</span><span class="hl opt">(</span><span class="hl kwb">object</span> sender<span class="hl opt">,</span> EventArgs e<span class="hl opt">) {</span>
            Debug<span class="hl opt">.</span><span class="hl kwd">WriteLine</span><span class="hl opt">(</span><span class="hl str">&quot;Click&quot;</span><span class="hl opt">);</span>
            grid<span class="hl opt">.</span>Columns<span class="hl opt">[</span><span class="hl str">&quot;Customer.Name&quot;</span><span class="hl opt">].</span>IsGrouped <span class="hl opt">=</span> btnGroup<span class="hl opt">.</span>Text <span class="hl opt">==</span> <span class="hl str">&quot;Group By Name&quot;</span> <span class="hl opt">?</span> <span class="hl kwa">true</span> <span class="hl opt">:</span> <span class="hl kwa">false</span><span class="hl opt">;</span>
            <span class="hl slc">//if (btnGroup.Text == &quot;Group By Name&quot;)</span>
            <span class="hl slc">//    grid.BeginRowEdit(grid.SelectedRowHandle, &quot;Id&quot;);</span>
            <span class="hl slc">//else</span>
            <span class="hl slc">//    grid.EndRowEdit(grid.SelectedRowHandle);</span>
            btnGroup<span class="hl opt">.</span>Text <span class="hl opt">=</span> btnGroup<span class="hl opt">.</span>Text <span class="hl opt">==</span> <span class="hl str">&quot;Group By Name&quot;</span> <span class="hl opt">?</span> <span class="hl str">&quot;Remove Grouping&quot;</span> <span class="hl opt">:</span> <span class="hl str">&quot;Group By Name&quot;</span><span class="hl opt">;</span>
            <span class="hl slc">//grid.DeleteRow(grid.SelectedRowHandle);</span>
        <span class="hl opt">}</span>
        <span class="hl kwb">void</span> <span class="hl kwd">OnChangeThemeClicked</span><span class="hl opt">(</span><span class="hl kwb">object</span> sender<span class="hl opt">,</span> EventArgs e<span class="hl opt">) {</span>
      GridThemeManager<span class="hl opt">.</span>ThemeName <span class="hl opt">=</span> GridThemeManager<span class="hl opt">.</span>ThemeName <span class="hl opt">==</span> Themes<span class="hl opt">.</span>Default <span class="hl opt">?</span> Themes<span class="hl opt">.</span>Dark <span class="hl opt">:</span> Themes<span class="hl opt">.</span>Default<span class="hl opt">;</span>
            <span class="hl kwd">SetAppearanceForControlPanel</span><span class="hl opt">();</span>
            btnChangeTheme<span class="hl opt">.</span>Text <span class="hl opt">=</span> btnChangeTheme<span class="hl opt">.</span>Text <span class="hl opt">==</span> <span class="hl str">&quot;Dark Theme&quot;</span> <span class="hl opt">?</span> <span class="hl str">&quot;Light Theme&quot;</span> <span class="hl opt">:</span> <span class="hl str">&quot;Dark Theme&quot;</span><span class="hl opt">;</span>
            <span class="hl slc">//string ourText = btnGroup.Text;</span>
            <span class="hl slc">//btnGroup.Text = &quot;Changing...&quot;;</span>
            <span class="hl slc">//btnGroup.Text = ourText;</span>
        <span class="hl opt">}</span>
        <span class="hl kwb">void</span> <span class="hl kwd">OnScrollClicked</span><span class="hl opt">(</span><span class="hl kwb">object</span> sender<span class="hl opt">,</span> EventArgs e<span class="hl opt">) {</span>
            grid<span class="hl opt">.</span><span class="hl kwd">ScrollToRow</span><span class="hl opt">(</span><span class="hl num">50</span><span class="hl opt">);</span>
        <span class="hl opt">}</span>
        <span class="hl kwb">void</span> <span class="hl kwd">SetAppearanceForControlPanel</span><span class="hl opt">() {</span>
      <span class="hl kwa">if</span> <span class="hl opt">(</span>GridThemeManager<span class="hl opt">.</span>ThemeName <span class="hl opt">==</span> Themes<span class="hl opt">.</span>Dark<span class="hl opt">) {</span>
                <span class="hl kwd">SetBlackButtons</span><span class="hl opt">();</span>
            <span class="hl opt">}</span> <span class="hl kwa">else</span> <span class="hl opt">{</span>       
                <span class="hl kwd">SetWhiteButtons</span><span class="hl opt">();</span>
            <span class="hl opt">}</span>
        <span class="hl opt">}</span>

        <span class="hl kwb">void</span> <span class="hl kwd">SetWhiteButtons</span><span class="hl opt">() {</span>
            controlPanel<span class="hl opt">.</span>BackgroundColor <span class="hl opt">=</span> Color<span class="hl opt">.</span><span class="hl kwd">FromRgb</span><span class="hl opt">(</span><span class="hl num">150</span><span class="hl opt">,</span> <span class="hl num">150</span><span class="hl opt">,</span> <span class="hl num">150</span><span class="hl opt">);</span>
            btnChangeTheme<span class="hl opt">.</span>ButtonColor <span class="hl opt">=</span> Color<span class="hl opt">.</span><span class="hl kwd">FromRgb</span><span class="hl opt">(</span><span class="hl num">210</span><span class="hl opt">,</span> <span class="hl num">210</span><span class="hl opt">,</span> <span class="hl num">210</span><span class="hl opt">);</span>
            btnChangeTheme<span class="hl opt">.</span>TextColor <span class="hl opt">=</span> Color<span class="hl opt">.</span>Black<span class="hl opt">;</span>
            btnChangeTheme<span class="hl opt">.</span>ImageSource <span class="hl opt">=</span> <span class="hl str">&quot;lightChart.png&quot;</span><span class="hl opt">;</span>

            btnGroup<span class="hl opt">.</span>BorderColor <span class="hl opt">=</span> Color<span class="hl opt">.</span><span class="hl kwd">FromRgb</span><span class="hl opt">(</span><span class="hl num">150</span><span class="hl opt">,</span> <span class="hl num">150</span><span class="hl opt">,</span> <span class="hl num">150</span><span class="hl opt">);</span>
            btnGroup<span class="hl opt">.</span>ButtonColor <span class="hl opt">=</span> Color<span class="hl opt">.</span><span class="hl kwd">FromRgb</span><span class="hl opt">(</span><span class="hl num">210</span><span class="hl opt">,</span> <span class="hl num">210</span><span class="hl opt">,</span> <span class="hl num">210</span><span class="hl opt">);</span>
            btnGroup<span class="hl opt">.</span>TextColor <span class="hl opt">=</span> Color<span class="hl opt">.</span>Black<span class="hl opt">;</span>
      btnGroup<span class="hl opt">.</span>ImageSource <span class="hl opt">=</span> <span class="hl str">&quot;lightFolder.png&quot;</span><span class="hl opt">;</span>
        <span class="hl opt">}</span>

        <span class="hl kwb">void</span> <span class="hl kwd">SetBlackButtons</span><span class="hl opt">() {</span>
            controlPanel<span class="hl opt">.</span>BackgroundColor <span class="hl opt">=</span> GridThemeManager<span class="hl opt">.</span>Theme<span class="hl opt">.</span>CellCustomizer<span class="hl opt">.</span>BorderColor<span class="hl opt">;</span>
            btnChangeTheme<span class="hl opt">.</span>ButtonColor <span class="hl opt">=</span> Color<span class="hl opt">.</span>Black<span class="hl opt">;</span>
            btnChangeTheme<span class="hl opt">.</span>TextColor <span class="hl opt">=</span> Color<span class="hl opt">.</span>White<span class="hl opt">;</span>
      btnChangeTheme<span class="hl opt">.</span>ImageSource <span class="hl opt">=</span> <span class="hl str">&quot;darkChart.png&quot;</span><span class="hl opt">;</span>

            btnGroup<span class="hl opt">.</span>BorderColor <span class="hl opt">=</span> GridThemeManager<span class="hl opt">.</span>Theme<span class="hl opt">.</span>CellCustomizer<span class="hl opt">.</span>BorderColor<span class="hl opt">;</span>
            btnGroup<span class="hl opt">.</span>ButtonColor <span class="hl opt">=</span> Color<span class="hl opt">.</span>Black<span class="hl opt">;</span>
            btnGroup<span class="hl opt">.</span>TextColor <span class="hl opt">=</span> Color<span class="hl opt">.</span>White<span class="hl opt">;</span>
      btnGroup<span class="hl opt">.</span>ImageSource <span class="hl opt">=</span> <span class="hl str">&quot;darkFolder.png&quot;</span><span class="hl opt">;</span>
        <span class="hl opt">}</span>
    <span class="hl opt">}</span>
<span class="hl opt">}</span>
</pre>
</body>
</html>
